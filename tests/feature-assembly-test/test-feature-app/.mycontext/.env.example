# MyContext Environment Variables

This file contains environment variables for your MyContext project.
Copy this file to `.env` in your .mycontext directory and update with your actual credentials.

## üöÄ Quick Start Guide

### Step 1: Choose Your AI Provider

**üéØ RECOMMENDED: Claude Agent SDK (Handles Everything Automatically)**
- Go to: https://console.anthropic.com/
- Create account
- Get API key from dashboard
- Copy key to: ANTHROPIC_API_KEY
- The SDK automatically handles Claude, Bedrock, and Vertex AI

**‚òÅÔ∏è Alternative: Amazon Bedrock (via Claude SDK)**
- Set: CLAUDE_CODE_USE_BEDROCK=1
- Configure AWS credentials
- The SDK automatically routes through Bedrock

**‚òÅÔ∏è Alternative: Google Vertex AI (via Claude SDK)**
- Set: CLAUDE_CODE_USE_VERTEX=1
- Configure Google Cloud credentials
- The SDK automatically routes through Vertex AI

**ü§ñ Alternative: Grok 4 (Direct X AI API)**
- Go to: https://console.x.ai/
- Create account and subscribe to SuperGrok
- Get API key from dashboard
- Copy key to: MYCONTEXT_XAI_API_KEY
- Set: MYCONTEXT_PROVIDER=xai
- Set: MYCONTEXT_MODEL=grok-beta
- ‚úÖ **WORKING**: Direct integration with X AI API

### Step 2: Configure Your Environment

Copy this file to `.mycontext/.env`:
```bash
cp .env.example .mycontext/.env
```

### Step 3: Update with Your Keys

Edit `.mycontext/.env` and replace placeholder values with your actual API keys.

### Step 4: Test Your Setup

```bash
mycontext status
```

## Environment Variables

NODE_ENV=development
NEXT_PUBLIC_APP_URL=http://localhost:3000
ANTHROPIC_API_KEY=
CLAUDE_CODE_USE_BEDROCK=0
AWS_ACCESS_KEY_ID=
AWS_SECRET_ACCESS_KEY=
AWS_REGION=us-east-1
CLAUDE_CODE_USE_VERTEX=0
GOOGLE_APPLICATION_CREDENTIALS=
MYCONTEXT_XAI_API_KEY=
MYCONTEXT_PROVIDER=claude-agent
MYCONTEXT_MODEL=claude-3-5-sonnet-20241022
MYCONTEXT_TIMEOUT=60000
MYCONTEXT_MAX_RETRIES=3
MYCONTEXT_TEMPERATURE=0.2
MYCONTEXT_MAX_TOKENS=4000

## üîß AI Provider Configuration

### üéØ Primary Setup (Claude Agent SDK Routes All)

#### Option 1: Direct Claude API (Recommended)
```bash
MYCONTEXT_PROVIDER=claude-agent
ANTHROPIC_API_KEY=your_anthropic_api_key
MYCONTEXT_MODEL=claude-3-5-sonnet-20241022
```

#### Option 2: Amazon Bedrock (via Claude SDK)
```bash
MYCONTEXT_PROVIDER=claude-agent
CLAUDE_CODE_USE_BEDROCK=1
AWS_ACCESS_KEY_ID=your_aws_access_key
AWS_SECRET_ACCESS_KEY=your_aws_secret_key
AWS_REGION=us-east-1
MYCONTEXT_MODEL=claude-3-5-sonnet-20241022
```

#### Option 3: Google Vertex AI (via Claude SDK)
```bash
MYCONTEXT_PROVIDER=claude-agent
CLAUDE_CODE_USE_VERTEX=1
GOOGLE_APPLICATION_CREDENTIALS=path/to/service-account.json
MYCONTEXT_MODEL=claude-3-5-sonnet-20241022
```

#### Option 4: Grok 4 (Direct X AI API) ‚úÖ WORKING
```bash
MYCONTEXT_PROVIDER=xai
MYCONTEXT_XAI_API_KEY=your_xai_api_key
MYCONTEXT_MODEL=grok-beta
```

**‚úÖ Tested and Working**: Grok 4 integration is fully functional!

## üìã MyContext Workflow Steps

After setting up your environment:

1. **Review PRD** (Required):
   ```bash
   # Open .mycontext/01-prd.md and update with your requirements
   ```

2. **Generate Context Files**:
   ```bash
   mycontext generate-context-files
   ```

3. **Compile PRD**:
   ```bash
   mycontext compile-prd
   ```

4. **Generate Components**:
   ```bash
   mycontext generate-components all --with-tests
   ```

5. **Preview Your App**:
   ```bash
   npm run dev
   # Visit http://localhost:3000/preview
   ```

## üîí Security Notes

- Never commit actual API keys to version control
- Add `.env` to your `.gitignore` file
- Rotate API keys regularly
- Use different keys for development and production
- Monitor your API usage for unusual activity

## üõ†Ô∏è Troubleshooting

**"Invalid API key" error?**
- Double-check your ANTHROPIC_API_KEY is correct
- Ensure it has the right permissions
- For Bedrock: verify AWS credentials
- For Vertex AI: verify Google Cloud credentials

**"Rate limit exceeded" error?**
- Claude Agent SDK handles rate limiting automatically
- Grok 4 has its own rate limits - check X AI console
- Consider upgrading to higher tier plans
- Wait and try again later

**"No AI providers available" error?**
- Check your API key is correctly set in .mycontext/.env
- Verify the provider name matches your configuration
- For Grok 4: ensure MYCONTEXT_PROVIDER=xai
- Run: mycontext status to verify setup

**Need help?**
- Check: mycontext status
- Review: .mycontext directory for generated files
- Test: mycontext model --test
